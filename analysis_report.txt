Cyber Security Internship - Task 5: Network Traffic Analysis Report
Prepared by: [Your Name]
Date: June 30, 2025
Time: 10:27 PM IST

1. Introduction
This document presents a detailed analysis of network traffic captured using Wireshark on Kali Linux. The report covers the capture process, identification of key protocols, and insights derived from traffic generated by accessing www.google.com and pinging a server.

2. Methodology
Wireshark was installed and configured on the eth0 interface. Traffic was generated through website browsing and server pings, with data captured for approximately one minute. Filters were applied to isolate and analyze HTTP, DNS, and TCP protocols.

3. Analysis
3.1 Protocols Identified
- HTTP: Recorded GET requests to www.google.com, returning status 200 OK, confirming successful page loads.
- DNS: Captured standard query-response pairs for domain resolution, including examples like arpafox.com.
- TCP: Observed Keep-Alive packets ensuring persistent and reliable connections.

3.2 Packet Details
Key attributes such as source/destination IPs, ports, and sequence/acknowledgment numbers were documented. The capture included HTTP requests with payload data and DNS query responses.

4. Findings
The analysis demonstrated effective traffic filtering, with HTTP managing web content delivery, DNS handling domain resolution, and TCP maintaining connection stability. No irregularities were identified in the captured traffic.

5. Conclusion
This exercise enhanced expertise in packet analysis, deepened understanding of protocol functionality, and highlighted Wireshark's utility in network troubleshooting.

6. Supporting Evidence
- wireshark_start.png: Screenshot of the initial capture setup.
- wireshark_filtered.png: Screenshot displaying filtered HTTP, DNS, and TCP packets.
- wireshark_capture.pcap: Exported packet capture file for further review.